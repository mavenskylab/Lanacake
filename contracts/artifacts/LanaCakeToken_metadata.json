{
	"compiler": {
		"version": "0.8.4+commit.c7e474f2"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "owner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "spender",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "value",
						"type": "uint256"
					}
				],
				"name": "Approval",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "user",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "bool",
						"name": "value",
						"type": "bool"
					}
				],
				"name": "BlacklistUpdated",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "bool",
						"name": "enabled",
						"type": "bool"
					}
				],
				"name": "BuyBackEnabledUpdated",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "bool",
						"name": "enabled",
						"type": "bool"
					}
				],
				"name": "BuyBackRandomEnabledUpdated",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "newLiquidityWallet",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "oldLiquidityWallet",
						"type": "address"
					}
				],
				"name": "BuyBackWalletUpdated",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "account",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "bool",
						"name": "isExcluded",
						"type": "bool"
					}
				],
				"name": "ExcludeFromFees",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address[]",
						"name": "accounts",
						"type": "address[]"
					},
					{
						"indexed": false,
						"internalType": "bool",
						"name": "isExcluded",
						"type": "bool"
					}
				],
				"name": "ExcludeMultipleAccountsFromFees",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "account",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "bool",
						"name": "isExcluded",
						"type": "bool"
					}
				],
				"name": "ExcludedMaxSellTransactionAmount",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "newValue",
						"type": "uint256"
					},
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "oldValue",
						"type": "uint256"
					}
				],
				"name": "GasForProcessingUpdated",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "previousOwner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "OwnershipTransferred",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "iterations",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "claims",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "lastProcessedIndex",
						"type": "uint256"
					},
					{
						"indexed": true,
						"internalType": "bool",
						"name": "automatic",
						"type": "bool"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "gas",
						"type": "uint256"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "processor",
						"type": "address"
					}
				],
				"name": "ProcessedDividendTracker",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "tokensSwapped",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "SendDividends",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "pair",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "bool",
						"name": "value",
						"type": "bool"
					}
				],
				"name": "SetAutomatedMarketMakerPair",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "tokensSwapped",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "bnbReceived",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "tokensIntoLiqudity",
						"type": "uint256"
					}
				],
				"name": "SwapAndLiquify",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "bool",
						"name": "enabled",
						"type": "bool"
					}
				],
				"name": "SwapAndLiquifyEnabledUpdated",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amountIn",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "address[]",
						"name": "path",
						"type": "address[]"
					}
				],
				"name": "SwapBNBForTokens",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "from",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "value",
						"type": "uint256"
					}
				],
				"name": "Transfer",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "newAddress",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "oldAddress",
						"type": "address"
					}
				],
				"name": "UpdateDividendTracker",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "newAddress",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "oldAddress",
						"type": "address"
					}
				],
				"name": "UpdateUniswapV2Router",
				"type": "event"
			},
			{
				"inputs": [],
				"name": "_buyBackMultiplier",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "_dividendToken",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "_isExcludedMaxSellTFransactionAmount",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "afterPreSale",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "owner",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "spender",
						"type": "address"
					}
				],
				"name": "allowance",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "spender",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "approve",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "automatedMarketMakerPairs",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "account",
						"type": "address"
					}
				],
				"name": "balanceOf",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "user",
						"type": "address"
					},
					{
						"internalType": "bool",
						"name": "value",
						"type": "bool"
					}
				],
				"name": "blacklistUpdate",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "buyBackEnabled",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "buyBackRandomEnabled",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "buyBackWallet",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "claim",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "deadAddress",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "decimals",
				"outputs": [
					{
						"internalType": "uint8",
						"name": "",
						"type": "uint8"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "spender",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "subtractedValue",
						"type": "uint256"
					}
				],
				"name": "decreaseAllowance",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "dividendRewardsFee",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "account",
						"type": "address"
					}
				],
				"name": "dividendTokenBalanceOf",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "dividendTracker",
				"outputs": [
					{
						"internalType": "contract LanaCakeDividendTracker",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "account",
						"type": "address"
					},
					{
						"internalType": "bool",
						"name": "excluded",
						"type": "bool"
					}
				],
				"name": "excludeFromFees",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address[]",
						"name": "accounts",
						"type": "address[]"
					},
					{
						"internalType": "bool",
						"name": "excluded",
						"type": "bool"
					}
				],
				"name": "excludeMultipleAccountsFromFees",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "gasForProcessing",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "account",
						"type": "address"
					}
				],
				"name": "getAccountDividendsInfo",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					},
					{
						"internalType": "int256",
						"name": "",
						"type": "int256"
					},
					{
						"internalType": "int256",
						"name": "",
						"type": "int256"
					},
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "index",
						"type": "uint256"
					}
				],
				"name": "getAccountDividendsInfoAtIndex",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					},
					{
						"internalType": "int256",
						"name": "",
						"type": "int256"
					},
					{
						"internalType": "int256",
						"name": "",
						"type": "int256"
					},
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getClaimWait",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getLastProcessedIndex",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getNumberOfDividendTokenHolders",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getOwner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getTotalDividendsDistributed",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "spender",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "addedValue",
						"type": "uint256"
					}
				],
				"name": "increaseAllowance",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "user",
						"type": "address"
					}
				],
				"name": "isBlackListed",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "account",
						"type": "address"
					}
				],
				"name": "isExcludedFromFees",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "marketingDivisor",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "marketingFee",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "maxBuyTranscationAmount",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "maxSellTransactionAmount",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "maxWalletToken",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "mint",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "name",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "prepareForPreSale",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "presaleAddress",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "gas",
						"type": "uint256"
					}
				],
				"name": "processDividendTracker",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "rand",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "renounceOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "sellFeeIncreaseFactor",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "pair",
						"type": "address"
					},
					{
						"internalType": "bool",
						"name": "value",
						"type": "bool"
					}
				],
				"name": "setAutomatedMarketMakerPair",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bool",
						"name": "_enabled",
						"type": "bool"
					}
				],
				"name": "setBuyBackEnabled",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bool",
						"name": "_enabled",
						"type": "bool"
					}
				],
				"name": "setBuyBackRandomEnabled",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "divisor",
						"type": "uint256"
					}
				],
				"name": "setMarketingDivisor",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "maxTokens",
						"type": "uint256"
					}
				],
				"name": "setMaxBuyTransaction",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "maxTokens",
						"type": "uint256"
					}
				],
				"name": "setMaxSellTransaction",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "maxTokens",
						"type": "uint256"
					}
				],
				"name": "setMaxWalletToken",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "multiplier",
						"type": "uint256"
					}
				],
				"name": "setSellTransactionMultiplier",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bool",
						"name": "_enabled",
						"type": "bool"
					}
				],
				"name": "setTradingIsEnabled",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "swapTokensAtAmount",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "symbol",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "totalFees",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "totalSupply",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "tradingIsEnabled",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "recipient",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "transfer",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "sender",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "recipient",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "transferFrom",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "transferOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "triggerBuyBack",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "uniswapV2Pair",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "uniswapV2Router",
				"outputs": [
					{
						"internalType": "contract IUniswapV2Router02",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "newBuyBackWallet",
						"type": "address"
					}
				],
				"name": "updateBuyBackWallet",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "claimWait",
						"type": "uint256"
					}
				],
				"name": "updateClaimWait",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint8",
						"name": "newFee",
						"type": "uint8"
					}
				],
				"name": "updateDividendRewardFee",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "newAddress",
						"type": "address"
					}
				],
				"name": "updateDividendTracker",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "newValue",
						"type": "uint256"
					}
				],
				"name": "updateGasForProcessing",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint8",
						"name": "newFee",
						"type": "uint8"
					}
				],
				"name": "updateMarketingFee",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "newAddress",
						"type": "address"
					}
				],
				"name": "updateUniswapV2Router",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_presaleAddress",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "_routerAddress",
						"type": "address"
					}
				],
				"name": "whitelistDxSale",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "account",
						"type": "address"
					}
				],
				"name": "withdrawableDividendOf",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"stateMutability": "payable",
				"type": "receive"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {
				"allowance(address,address)": {
					"details": "See {BEP20-allowance}."
				},
				"approve(address,uint256)": {
					"details": "See {BEP20-approve}. Requirements: - `spender` cannot be the zero address."
				},
				"balanceOf(address)": {
					"details": "See {BEP20-balanceOf}."
				},
				"decimals()": {
					"details": "Returns the token decimals."
				},
				"decreaseAllowance(address,uint256)": {
					"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {BEP20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
				},
				"getOwner()": {
					"details": "Returns the bep token owner."
				},
				"increaseAllowance(address,uint256)": {
					"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {BEP20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
				},
				"mint(uint256)": {
					"details": "Creates `amount` tokens and assigns them to `msg.sender`, increasing the total supply. Requirements - `msg.sender` must be the token owner"
				},
				"name()": {
					"details": "Returns the token name."
				},
				"owner()": {
					"details": "Returns the address of the current owner."
				},
				"renounceOwnership()": {
					"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
				},
				"symbol()": {
					"details": "Returns the token symbol."
				},
				"totalSupply()": {
					"details": "See {BEP20-totalSupply}."
				},
				"transfer(address,uint256)": {
					"details": "See {BEP20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
				},
				"transferFrom(address,address,uint256)": {
					"details": "See {BEP20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {BEP20}; Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for `sender`'s tokens of at least `amount`."
				},
				"transferOwnership(address)": {
					"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
				}
			},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/LanaCakeToken.sol": "LanaCakeToken"
		},
		"evmVersion": "istanbul",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": true,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"contracts/GSN/Context.sol": {
			"keccak256": "0xecc3aba4e69f6b23e126c1f1bfc2287aad29c9c9db1bf7c8367e3ec04cc5bbfc",
			"license": "GPL-3.0-or-later",
			"urls": [
				"bzz-raw://e32ee845429468231711b99df680aa1fbbb1a9eeee3050e9df564f66b8f6806c",
				"dweb:/ipfs/QmetgBMyXiXhNqyAheCrCb6ovrUjrJ2BwVNCSG75KcpFeU"
			]
		},
		"contracts/LanaCakeDividendTracker.sol": {
			"keccak256": "0x4b8b3145bc7d8fdfeedc9b7c0ad776c7ec15042a4c3704cb0bafadee9e4d4cc8",
			"license": "MIT",
			"urls": [
				"bzz-raw://d5a30666af3d28c9403aee780864cc2019088b02f2c41a057a53ac924b2c7c5a",
				"dweb:/ipfs/QmNLhsghRmNT6V6U4EVqim7kmLmncDfyuHR4NesqoRXFQo"
			]
		},
		"contracts/LanaCakeToken.sol": {
			"keccak256": "0x3dbc73a279936b4015f0b705bd2bb80529859613ded7e800322045568ad08f22",
			"license": "MIT",
			"urls": [
				"bzz-raw://aea0b3daf9aef7b8ba60edba0c364d802d8f4917068cc7c2c18525e756a6be7f",
				"dweb:/ipfs/QmYEQqh5ag3FB1VMgZ7bkWcGDPwkAH6KEDsyJwXxQBBBjU"
			]
		},
		"contracts/access/Ownable.sol": {
			"keccak256": "0x98b84a28bd5cb9e9381a84062724e5dabb995b20d18d2b70cdd4496b26b8bd12",
			"license": "GPL-3.0-or-later",
			"urls": [
				"bzz-raw://8d06e16ada340b918ec4189413ad51db369fb5c63ec52f3b4d3d859d93e8a61b",
				"dweb:/ipfs/QmYRwT7MgCvUYztK9QkKPcdJ74ythz9D1ViBzk4y66oRPa"
			]
		},
		"contracts/libraries/IterableMapping.sol": {
			"keccak256": "0xd0245832abb142eb0eba10eb6ff97451de2e612371ce365a31f69c027c73da92",
			"license": "GPL-3.0-or-later",
			"urls": [
				"bzz-raw://4bb75e5ed258a0d5b884569c968f1dd1153f69b30fbd9cd686da8f70106ee0ce",
				"dweb:/ipfs/QmZ2s6bjXmQxc5MMB2huJqJYVDG3517bpwm6BvS79Hn3UQ"
			]
		},
		"contracts/token/BEP20/BEP20.sol": {
			"keccak256": "0x4e7fdd7c5bc4c68656e7dff19158ae3e6e176e5936f2536ba4f0558212e1b170",
			"license": "GPL-3.0-or-later",
			"urls": [
				"bzz-raw://f2ce6e09bf6ca36decba9512fb41ba73939149bb28bdd7385f43405ed19709cc",
				"dweb:/ipfs/QmPqeRQBfokeyXGtKtBQaEbE5CexhZkVejhsNSRGeSuboD"
			]
		},
		"contracts/token/BEP20/IBEP20.sol": {
			"keccak256": "0x70b4e46320f5a9208917a48b7fab95e3bf4a61188dab152cdf43a6a683d86b8c",
			"license": "GPL-3.0-or-later",
			"urls": [
				"bzz-raw://4ae9dc79fd57bc3fe1a017c0dcf21bdc7e3cdbb9e0d9ed2ce7c1d3aa11fd42c7",
				"dweb:/ipfs/QmNsbBZyiS7fHvd8kLHzE8R3V1XfAHZgUk5TQDZ7UbTtgW"
			]
		},
		"contracts/token/dividend/DividendPayingToken.sol": {
			"keccak256": "0xdbf22573b9990c959d4c3a28b9bc4ed0900f372e31b0327f50b7a2cd97b89a76",
			"license": "GPL-3.0-or-later",
			"urls": [
				"bzz-raw://f3ba846baa1d9495ffb2262dad1c966f835f0928ad564f3f35c4122890207a1d",
				"dweb:/ipfs/Qmbw13iJQR35FuatBm3YbagVVMpbsNpPJkL5Tqdmv5cBRR"
			]
		},
		"contracts/token/dividend/IDividendPayingToken.sol": {
			"keccak256": "0xa32a7a1c6ff55b0bdd11d600c9c08aa9c07e4320e2ab941b67a2d98b8059eca5",
			"license": "GPL-3.0-or-later",
			"urls": [
				"bzz-raw://daf5fb7fb3e5eec423b10579d422a81ac1e68f1866524ab875d983d32629d73e",
				"dweb:/ipfs/QmPkvXPVXChKCRLefiaZiEZHbAAQUj6zZYkfsjy7PohtEa"
			]
		},
		"contracts/token/dividend/IDividendPayingTokenOptional.sol": {
			"keccak256": "0x1808b1e5873d931edc5d06e9650ca39e0927dc89fc8702af1e88202876a77cb4",
			"license": "GPL-3.0-or-later",
			"urls": [
				"bzz-raw://045f18bf35eb712780f1bb6bdceffaa134844f448bf789d2f0a013a315d31869",
				"dweb:/ipfs/QmUqoy4v6AK4eudzLRFrFzLqczWGxFmSvrUwMeKxfEHJqp"
			]
		},
		"contracts/uniswap/interfaces/IUniswapV2Factory.sol": {
			"keccak256": "0x3bcaea75f5fde136af6dc781f4b411d2e30af9acd8101ef4af694966069b4438",
			"license": "GPL-3.0-or-later",
			"urls": [
				"bzz-raw://90cf91340dceef1c9d1a2583c45f76938a2c20d1c7945b501bd0f30f96eb32a3",
				"dweb:/ipfs/QmetWnVWRTqqapSnoVkznfN3ixpkSQTcg8bQ9bkyx4XfLa"
			]
		},
		"contracts/uniswap/interfaces/IUniswapV2Router01.sol": {
			"keccak256": "0xd291ee5586fd81f9a254150e7a4be94b4f78c5307313c8201eaa3da1de4b08aa",
			"license": "GPL-3.0-or-later",
			"urls": [
				"bzz-raw://90ca45e7a905b175be295276ee0dea75477a6a7f774982cc033ba08d59be3186",
				"dweb:/ipfs/QmYSgwoTF7oDsSWEsih2Brm6iDnou78dWwP1HRARfmwXhJ"
			]
		},
		"contracts/uniswap/interfaces/IUniswapV2Router02.sol": {
			"keccak256": "0x1a81ec3844d101d0e9a8897f10e94c5344170b0899ec3746a5f2014c479ec0f6",
			"license": "GPL-3.0-or-later",
			"urls": [
				"bzz-raw://6b732ff03543954443d096c949dad1d4a5f3346b5471bfc5a70b33e87a2d5b63",
				"dweb:/ipfs/QmPvfoK5i5jZbkb7HfoB6ZUAULNLKM8QkSJ4qQvw9VUeLg"
			]
		}
	},
	"version": 1
}